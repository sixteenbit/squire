/*!
Theme Name: Squire
Theme URI: https://github.com/sixteenbit/squire
Author: Sixteenbit
Author URI: https://sixteenbit.com
Description: Custom theme: Squire, developed by Sixteenbit.
Version: 0.2.2
License: GNU General Public License v2 or later
License URI: LICENSE
Text Domain: squire
Tags: custom-background, custom-logo, custom-menu, featured-images, threaded-comments, translation-ready

This theme, like WordPress, is licensed under the GPL.
Use it to make something cool, have fun, and share what you've learned with others.
*/
::-moz-selection {
  background: #fff2a8;
}
::selection {
  background: #fff2a8;
}

a {
  background-color: transparent;
  transition: background-color 0.2s, color 0.2s, border-color 0.2s;
}

mark {
  background-color: #fff2a8;
}

.post-password-form [type="submit"] {
  display: inline-block;
  vertical-align: middle;
  margin: 0 0 1rem 0;
  padding: 0.85em 1em;
  border: 1px solid transparent;
  border-radius: 0;
  transition: background-color 0.25s ease-out, color 0.25s ease-out;
  font-family: inherit;
  font-size: 0.9rem;
  -webkit-appearance: none;
  line-height: 1;
  text-align: center;
  cursor: pointer;
}

[data-whatinput='mouse'] .post-password-form [type="submit"] {
  outline: 0;
}

.post-password-form [type="submit"], .post-password-form [type="submit"].disabled, .post-password-form [type="submit"][disabled], .post-password-form [type="submit"].disabled:hover, .post-password-form [type="submit"][disabled]:hover, .post-password-form [type="submit"].disabled:focus, .post-password-form [type="submit"][disabled]:focus {
  background-color: #0052cc;
  color: #fefefe;
}

.post-password-form [type="submit"]:hover, .post-password-form [type="submit"]:focus {
  background-color: #0046ad;
  color: #fefefe;
}

.site {
  position: relative;
  height: 100%;
}

@media print, screen and (min-width: 64em) {
  .site .site-content {
    margin-right: 18.75rem;
  }
  .has-child-pages .site .site-content {
    margin-right: 33.75rem;
  }
}

.site .content-area {
  display: block;
  max-width: 60rem;
  margin-left: auto;
  margin-right: auto;
  padding: 1rem;
}

@media print, screen and (min-width: 64em) {
  .site .content-area {
    padding: 5rem;
  }
}

.site-header {
  background-color: #084ca3;
  overflow: auto;
  color: #deebff;
}

.site-header::before, .site-header::after {
  display: table;
  content: ' ';
  -ms-flex-preferred-size: 0;
      flex-basis: 0;
  -ms-flex-order: 1;
      order: 1;
}

.site-header::after {
  clear: both;
}

@media print, screen and (min-width: 64em) {
  .site-header {
    position: fixed;
    top: 0;
    bottom: 0;
    right: 0;
    width: 18.75rem;
  }
}

.site-header a {
  color: #deebff;
}

.site-header a:hover, .site-header a:active, .site-header a:focus {
  color: #fefefe;
}

.site-header .site-branding {
  position: relative;
  padding: 1rem;
}

.site-header .site-branding::before, .site-header .site-branding::after {
  display: table;
  content: ' ';
  -ms-flex-preferred-size: 0;
      flex-basis: 0;
  -ms-flex-order: 1;
      order: 1;
}

.site-header .site-branding::after {
  clear: both;
}

@media print, screen and (min-width: 64em) {
  .site-header .site-branding {
    padding-top: 2rem;
    padding-bottom: 2rem;
  }
}

.site-header .menu-toggle,
.site-header .search-toggle {
  float: left;
  width: 40px;
  height: 40px;
  margin-bottom: 0;
  padding: 0;
  border-radius: 50%;
  font-size: 1.125rem;
  line-height: 40px;
  color: #deebff;
  cursor: pointer;
}

.site-header .menu-toggle:focus,
.site-header .search-toggle:focus {
  outline: none;
}

.site-header .menu-toggle {
  margin-right: 0.5rem;
}

.site-title {
  float: right;
  margin-bottom: 0;
  font-size: 1.125rem;
  letter-spacing: -0.03125rem;
  line-height: 40px;
  text-decoration: none;
}

.site-title a {
  color: #fefefe;
}

@media print, screen and (min-width: 64em) {
  .site-title {
    font-size: 1.5rem;
  }
}

.site-description {
  display: none;
}

.wp-custom-logo .site-title {
  display: none;
}

.wp-custom-logo .custom-logo-link {
  position: relative;
}

.wp-custom-logo .custom-logo {
  max-width: 100px;
  height: auto;
  margin-right: 1rem;
}

.site-footer {
  padding: 1rem;
  font-size: 0.75rem;
}

@media print, screen and (min-width: 64em) {
  .site-footer {
    margin-right: 18.75rem;
  }
  .has-child-pages .site-footer {
    margin-right: 33.75rem;
  }
}

.widget-area {
  display: none;
  /* Recent Posts Widget */
  /* RSS Widget */
  /* Text widget */
  /* Search widget */
}

@media print, screen and (min-width: 64em) {
  .widget-area {
    display: block;
  }
}

.widget-area .widget-title {
  font-size: 1.125rem;
  letter-spacing: -0.03125rem;
  color: #fefefe;
  text-transform: uppercase;
}

.widget-area .widget {
  margin: 0 0 1rem;
  padding: 1rem;
  word-wrap: break-word;
  /* Make sure select elements fit in widgets. */
}

.widget-area .widget select {
  max-width: 100%;
}

.widget-area .widget > ul {
  padding: 0;
  margin: 0;
  list-style: none;
  position: relative;
  display: -ms-flexbox;
  display: flex;
  -ms-flex-wrap: wrap;
      flex-wrap: wrap;
  -ms-flex-wrap: nowrap;
      flex-wrap: nowrap;
  -ms-flex-direction: column;
      flex-direction: column;
}

[data-whatinput='mouse'] .widget-area .widget > ul li {
  outline: 0;
}

.widget-area .widget > ul a,
.widget-area .widget > ul .button {
  line-height: 1;
  text-decoration: none;
  display: block;
  padding: 0.7rem 1rem;
}

.widget-area .widget > ul input,
.widget-area .widget > ul select,
.widget-area .widget > ul a,
.widget-area .widget > ul button {
  margin-bottom: 0;
}

.widget-area .widget > ul input {
  display: inline-block;
}

.widget-area .widget > ul a {
  padding-right: 0;
}

.widget-area .widget_recent_entries ul,
.widget-area .widget_categories ul,
.widget-area .menu {
  padding: 0;
  margin: 0;
  list-style: none;
  position: relative;
  display: -ms-flexbox;
  display: flex;
  -ms-flex-wrap: wrap;
      flex-wrap: wrap;
  -ms-flex-wrap: nowrap;
      flex-wrap: nowrap;
  -ms-flex-direction: column;
      flex-direction: column;
}

[data-whatinput='mouse'] .widget-area .widget_recent_entries ul li, [data-whatinput='mouse']
.widget-area .widget_categories ul li, [data-whatinput='mouse']
.widget-area .menu li {
  outline: 0;
}

.widget-area .widget_recent_entries ul a,
.widget-area .widget_recent_entries ul .button,
.widget-area .widget_categories ul a,
.widget-area .widget_categories ul .button,
.widget-area .menu a,
.widget-area .menu .button {
  line-height: 1;
  text-decoration: none;
  display: block;
  padding: 0.7rem 1rem;
}

.widget-area .widget_recent_entries ul input,
.widget-area .widget_recent_entries ul select,
.widget-area .widget_recent_entries ul a,
.widget-area .widget_recent_entries ul button,
.widget-area .widget_categories ul input,
.widget-area .widget_categories ul select,
.widget-area .widget_categories ul a,
.widget-area .widget_categories ul button,
.widget-area .menu input,
.widget-area .menu select,
.widget-area .menu a,
.widget-area .menu button {
  margin-bottom: 0;
}

.widget-area .widget_recent_entries ul input,
.widget-area .widget_categories ul input,
.widget-area .menu input {
  display: inline-block;
}

.widget-area .widget_recent_entries ul > li > a,
.widget-area .widget_categories ul > li > a,
.widget-area .menu > li > a {
  font-size: 0.875rem;
  line-height: 1.4;
  color: #deebff;
}

.widget-area .widget_recent_entries ul > li > a:hover, .widget-area .widget_recent_entries ul > li > a:active, .widget-area .widget_recent_entries ul > li > a:focus,
.widget-area .widget_categories ul > li > a:hover,
.widget-area .widget_categories ul > li > a:active,
.widget-area .widget_categories ul > li > a:focus,
.widget-area .menu > li > a:hover,
.widget-area .menu > li > a:active,
.widget-area .menu > li > a:focus {
  background-color: rgba(10, 10, 10, 0.2);
}

.widget-area .widget_recent_entries ul > li.current_page_item > a, .widget-area .widget_recent_entries ul > li.current-menu-parent > a, .widget-area .widget_recent_entries ul > li.current-cat > a,
.widget-area .widget_categories ul > li.current_page_item > a,
.widget-area .widget_categories ul > li.current-menu-parent > a,
.widget-area .widget_categories ul > li.current-cat > a,
.widget-area .menu > li.current_page_item > a,
.widget-area .menu > li.current-menu-parent > a,
.widget-area .menu > li.current-cat > a {
  background-color: rgba(10, 10, 10, 0.2);
}

.widget-area .widget_recent_entries .post-date {
  display: block;
}

.widget-area .rsswidget img {
  margin-top: -4px;
}

.widget-area .rssSummary {
  margin: 0.5625rem 0;
}

.widget-area .rss-date {
  display: block;
}

.widget-area .widget_rss li {
  margin-bottom: 1rem;
}

.widget-area .widget_rss li:last-child {
  margin-bottom: 0;
}

.widget-area .widget_text > div > :last-child {
  margin-bottom: 0;
}

.widget-area .widget_search .search-field {
  margin-bottom: 0;
}

.widget-area .widget_search .search-submit {
  display: none;
}

/* Text meant only for screen readers. */
.screen-reader-text {
  position: absolute !important;
  width: 1px;
  height: 1px;
  margin: -1px;
  padding: 0;
  border: 0;
  overflow: hidden;
  clip: rect(1px, 1px, 1px, 1px);
  word-wrap: normal !important;
  /* Many screen reader and browser combinations announce broken words as they would appear visually. */
  -webkit-clip-path: inset(50%);
          clip-path: inset(50%);
}

.screen-reader-text:focus {
  top: 5px;
  right: 5px;
  z-index: 100000;
  /* Above WP toolbar. */
  display: block;
  width: auto;
  height: auto;
  padding: 15px 23px 14px;
  border-radius: 3px;
  background-color: #fefefe;
  box-shadow: 0 0 2px 2px rgba(0, 0, 0, 0.6);
  clip: auto !important;
  font-size: 0.875rem;
  font-weight: bold;
  line-height: normal;
  color: #172b4d;
  text-decoration: none;
  -webkit-clip-path: none;
          clip-path: none;
}

/* Do not show the outline on the skip link target. */
#content[tabindex="-1"]:focus {
  outline: 0;
}

.main-navigation {
  display: none;
}

@media print, screen and (min-width: 64em) {
  .main-navigation {
    display: block;
  }
}

.main-navigation > .menu > li > a {
  font-weight: 600;
}

.main-navigation .menu > li > a {
  font-size: 0.875rem;
  color: #deebff;
}

.main-navigation .menu > li > a:hover, .main-navigation .menu > li > a:active, .main-navigation .menu > li > a:focus {
  background-color: rgba(10, 10, 10, 0.2);
}

.main-navigation .menu > li.current_page_item > a, .main-navigation .menu > li.current-menu-parent > a {
  background-color: rgba(10, 10, 10, 0.2);
}

.main-navigation .menu > li.current-menu-parent > .submenu {
  display: -ms-flexbox !important;
  display: flex !important;
}

.child-navigation {
  padding-top: 1rem;
  background-color: #f4f5f7;
}

@media print, screen and (min-width: 64em) {
  .child-navigation {
    position: fixed;
    top: 0;
    bottom: 0;
    right: 18.75rem;
    width: 15rem;
    padding: 2.5rem 1rem 0;
  }
}

.admin-bar .child-navigation {
  top: 32px;
}

.child-navigation .menu > li > a {
  border-radius: 0.1875rem;
  font-size: 0.875rem;
  line-height: 1.4;
  color: #42526e;
}

.child-navigation .menu > li > a:hover {
  background-color: #eaecf0;
}

.child-navigation .menu > li .is-active {
  background-color: #eaecf0;
  color: #0052cc;
}

.child-navigation .menu > li.current_page_item > a, .child-navigation .menu > li.current-menu-parent > a {
  background-color: #eaecf0;
}

.child-navigation .menu > li.current-menu-parent > .submenu {
  display: -ms-flexbox !important;
  display: flex !important;
}

.child-navigation .menu .menu-text {
  font-size: 0.75rem;
  text-transform: uppercase;
}

.child-navigation .menu .back-to-top > a {
  font-size: 0.5rem;
  font-weight: 900;
  text-transform: uppercase;
}

.social-navigation .menu > li > a {
  position: relative;
  color: #deebff;
}

.social-navigation .menu > li > a:hover, .social-navigation .menu > li > a:active, .social-navigation .menu > li > a:focus {
  color: #08418a;
}

.social-navigation .menu > li > a:before {
  content: '\f0c1';
  font-family: 'Font Awesome 5 Brands';
  text-align: center;
}

.social-navigation .menu > li a[href*='facebook.com']:before {
  content: '\f09a';
}

.social-navigation .menu > li a[href*='flickr.com']:before {
  content: '\f16e';
}

.social-navigation .menu > li a[href*='plus.google.com']:before {
  content: '\f1a0';
}

.social-navigation .menu > li a[href*='github.com']:before {
  content: '\f09b';
}

.social-navigation .menu > li a[href*='instagram.com']:before {
  content: '\f16d';
}

.social-navigation .menu > li a[href*='linkedin.com']:before {
  content: '\f08c';
}

.social-navigation .menu > li a[href*='pinterest.com']:before {
  content: '\f0d2';
}

.social-navigation .menu > li a[href*='slack.com']:before {
  content: '\f198';
}

.social-navigation .menu > li a[href*='tumblr.com']:before {
  content: '\f173';
}

.social-navigation .menu > li a[href*='twitter.com']:before {
  content: '\f099';
}

.social-navigation .menu > li a[href*='vimeo.com']:before {
  content: '\f40a';
}

.social-navigation .menu > li a[href*='wordpress.com']:before,
.social-navigation .menu > li a[href*='wordpress.org']:before {
  content: '\f19a';
}

.social-navigation .menu > li a[href*='youtube.com']:before,
.social-navigation .menu > li a[href*='youtu.be']:before {
  content: '\f167';
}

.social-navigation .menu > li a[href*='mailto:']:before,
.social-navigation .menu > li a[href*='/contact/']:before,
.social-navigation .menu > li a[href*='/contact-us/']:before {
  content: '\10f0e0';
}

.social-navigation .menu > li a[href$='/feed/']:before {
  content: '\10f09e';
}

.alignleft {
  display: inline;
  float: right;
  margin: 0.25rem 0 1rem 1rem;
}

.alignright {
  display: inline;
  float: left;
  margin: 0.25rem 1rem 1rem 0;
}

.aligncenter {
  display: block;
  clear: both;
  margin: 0 auto 1rem;
}

.comment-content a {
  word-wrap: break-word;
}

.bypostauthor {
  display: block;
}

.page-content .wp-smiley,
.entry-content .wp-smiley,
.comment-content .wp-smiley {
  margin-top: 0;
  margin-bottom: 0;
  padding: 0;
  border: 0;
}

/* Make sure embeds and iframes fit their containers. */
embed,
iframe,
object {
  max-width: 100%;
}

.wp-caption {
  max-width: 100%;
  margin-bottom: 1rem;
}

.wp-caption img[class*="wp-image-"] {
  display: block;
  clear: both;
  margin-left: auto;
  margin-right: auto;
}

.wp-caption .wp-caption-text {
  margin: 0.8075em 0;
}

.wp-caption-text {
  text-align: center;
}

.search-panel {
  padding: 1rem;
  background-color: #fefefe;
}

.admin-bar .search-panel {
  top: 32px;
}

.search-panel .button {
  width: 40px;
  height: 40px;
  border-radius: 50%;
}

.search-panel .search-input {
  border: 0;
  background: none;
  box-shadow: none;
}

@media print, screen and (min-width: 64em) {
  .search-panel .search-input {
    font-size: 1.75rem;
  }
}

.search-panel .search-submit {
  display: none;
}

.search_results {
  position: absolute;
  right: 0;
  z-index: 99;
  display: block;
  margin: 1rem 0 0;
  padding: 0;
  background: #fefefe;
  overflow: auto;
}

.search_results li {
  display: block;
  margin: 0;
  text-align: right;
  text-decoration: none;
}

.search_results li a {
  display: block;
  margin-right: 0;
  padding: 0.5rem 1rem;
  font-size: 0.875rem;
  color: #42526e;
  text-decoration: none;
}

.search_results li:hover, .search_results li:focus {
  background-color: #eaecf0;
}

.search_results .post_with_thumb a {
  float: right;
  width: 150px;
  margin-bottom: 5px;
}

.search_results .post_with_thumb .post_thumb {
  float: right;
  width: auto;
  height: 48px;
  margin: 0.1875rem 0 0.625rem 0.625rem;
}

.search_footer {
  width: 100%;
  margin-top: 1rem;
  margin-right: 1rem;
  padding: 0;
}

.search_footer a {
  display: inline-block;
  vertical-align: middle;
  margin: 0 0 1rem 0;
  padding: 0.85em 1em;
  border: 1px solid transparent;
  border-radius: 0;
  transition: background-color 0.25s ease-out, color 0.25s ease-out;
  font-family: inherit;
  font-size: 0.9rem;
  -webkit-appearance: none;
  line-height: 1;
  text-align: center;
  cursor: pointer;
  font-size: 0.6rem;
}

[data-whatinput='mouse'] .search_footer a {
  outline: 0;
}

.search_footer a, .search_footer a.disabled, .search_footer a[disabled], .search_footer a.disabled:hover, .search_footer a[disabled]:hover, .search_footer a.disabled:focus, .search_footer a[disabled]:focus {
  background-color: #f4f5f7;
  color: #172b4d;
}

.search_footer a:hover, .search_footer a:focus {
  background-color: #0046ad;
  color: #172b4d;
}

.search_footer a:hover, .search_footer a:active, .search_footer a:focus {
  color: #f4f5f7;
}

#search_results_activity_indicator {
  z-index: 999999;
}

.wp-pagenavi {
  margin-right: 0;
  margin-bottom: 1rem;
}

.wp-pagenavi::before, .wp-pagenavi::after {
  display: table;
  content: ' ';
  -ms-flex-preferred-size: 0;
      flex-basis: 0;
  -ms-flex-order: 1;
      order: 1;
}

.wp-pagenavi::after {
  clear: both;
}

.wp-pagenavi li {
  margin-left: 0.0625rem;
  border-radius: 0;
  font-size: 0.875rem;
  display: inline-block;
}

.wp-pagenavi a,
.wp-pagenavi button {
  display: block;
  padding: 0.1875rem 0.625rem;
  border-radius: 0;
  color: #0a0a0a;
}

.wp-pagenavi a:hover,
.wp-pagenavi button:hover {
  background: #e6e6e6;
}

.wp-pagenavi > a {
  display: inline-block;
}

.wp-pagenavi > .current {
  padding: 0.1875rem 0.625rem;
  background: #1779ba;
  color: #fefefe;
  cursor: default;
}

.wp-pagenavi .pages {
  position: absolute !important;
  width: 1px !important;
  height: 1px !important;
  padding: 0 !important;
  overflow: hidden !important;
  clip: rect(0, 0, 0, 0) !important;
  white-space: nowrap !important;
  border: 0 !important;
}

.scroll-to-top {
  position: fixed;
  left: 1rem;
  bottom: 20vh;
  z-index: 10000;
  opacity: 0.75;
  visibility: hidden;
  text-align: center;
}

.scroll-to-top.active {
  visibility: visible;
}

.no-js .top-bar {
  display: none;
}

.admin-bar .site-header {
  top: 32px;
}

@media screen and (max-width: 782px) {
  .admin-bar .site-header {
    top: 46px;
  }
}

.blog .content-area,
.archive .content-area {
  max-width: 90rem;
}

.blog .hentry,
.archive .hentry {
  position: relative;
  border-radius: 0.1875rem;
}

.blog .entry-header,
.archive .entry-header {
  margin-bottom: 0;
  padding: 1rem;
  border-top-right-radius: 0.1875rem;
  border-top-left-radius: 0.1875rem;
  background-color: #f4f5f7;
}

.blog h2.entry-title,
.archive h2.entry-title {
  font-size: 1.5rem;
}

.blog .entry-content,
.blog .entry-footer,
.archive .entry-content,
.archive .entry-footer {
  padding: 1rem;
}

.blog .entry-content::before, .blog .entry-content::after,
.blog .entry-footer::before,
.blog .entry-footer::after,
.archive .entry-content::before,
.archive .entry-content::after,
.archive .entry-footer::before,
.archive .entry-footer::after {
  display: table;
  content: ' ';
  -ms-flex-preferred-size: 0;
      flex-basis: 0;
  -ms-flex-order: 1;
      order: 1;
}

.blog .entry-content::after,
.blog .entry-footer::after,
.archive .entry-content::after,
.archive .entry-footer::after {
  clear: both;
}

.blog .entry-content p:last-child,
.blog .entry-footer p:last-child,
.archive .entry-content p:last-child,
.archive .entry-footer p:last-child {
  margin-bottom: 0;
}

.blog .entry-content,
.archive .entry-content {
  margin-top: 0;
  border-left: 1px solid #f4f5f7;
  border-right: 1px solid #f4f5f7;
  font-size: 0.875rem;
}

.blog .entry-footer,
.archive .entry-footer {
  border-bottom-left-radius: 0.1875rem;
  border-bottom-right-radius: 0.1875rem;
  background-color: #f4f5f7;
}

.blog .entry-footer .entry-meta,
.archive .entry-footer .entry-meta {
  float: left;
}

.blog .entry-profile-pic,
.archive .entry-profile-pic {
  float: right;
  margin-bottom: 0;
}

.blog .entry-profile-pic .avatar,
.archive .entry-profile-pic .avatar {
  width: 24px;
  height: 24px;
}

.custom-header,
.single-featured-image-header {
  margin-bottom: 1rem;
  height: 300px;
  background-repeat: no-repeat;
  background-position: 100% 0;
  background-attachment: fixed;
  background-size: 100%;
}

@media print, screen and (min-width: 64em) {
  .custom-header,
  .single-featured-image-header {
    height: 100vh;
    margin-right: 18.75rem;
    background-position: 9.375rem 0;
  }
  .has-child-pages .custom-header, .has-child-pages
  .single-featured-image-header {
    margin-right: 33.75rem;
    background-position: 24.375rem 0;
  }
}

.sticky-post {
  display: block;
}

.hentry {
  margin: 0 0 3.75rem;
  word-wrap: break-word;
}

.entry-profile-pic {
  margin-bottom: 1rem;
  font-size: 0.8125rem;
}

.entry-profile-pic .avatar {
  width: 30px;
  height: 30px;
  margin-left: 0.3125rem;
  border-radius: 100%;
}

.entry-header {
  margin-bottom: 1.25rem;
}

@media print, screen and (min-width: 40em) {
  .entry-header {
    margin-bottom: 5rem;
  }
}

.entry-header .entry-title > a {
  text-decoration: none;
}

.child-entry-header .entry-title {
  position: relative;
}

.child-entry-header .entry-title > a {
  color: inherit;
}

.child-entry-header .entry-title > a:hover::before, .child-entry-header .entry-title > a:active::before, .child-entry-header .entry-title > a:focus::before {
  position: absolute;
  top: 50%;
  -webkit-transform: translateY(-50%);
          transform: translateY(-50%);
  right: -24px;
  content: '\f0c1';
  font-family: 'Font Awesome 5 Pro';
  font-size: 1rem;
}

h1.entry-title {
  font-size: 2.375rem;
  font-weight: 300;
  letter-spacing: -0.03125rem;
}

h2.entry-title {
  font-size: 2rem;
  letter-spacing: -0.03125rem;
}

.entry-meta {
  font-size: 0.8125rem;
}

.entry-meta::before, .entry-meta::after {
  display: table;
  content: ' ';
  -ms-flex-preferred-size: 0;
      flex-basis: 0;
  -ms-flex-order: 1;
      order: 1;
}

.entry-meta::after {
  clear: both;
}

.entry-meta .entry-date {
  float: right;
  margin-left: 1rem;
  padding: 0.3125rem;
  line-height: 1;
}

.entry-meta .post-categories {
  padding: 0;
  margin: 0;
  list-style: none;
  position: relative;
  display: -ms-flexbox;
  display: flex;
  -ms-flex-wrap: wrap;
      flex-wrap: wrap;
  -ms-flex-align: center;
      align-items: center;
  float: right;
}

[data-whatinput='mouse'] .entry-meta .post-categories li {
  outline: 0;
}

.entry-meta .post-categories a,
.entry-meta .post-categories .button {
  line-height: 1;
  text-decoration: none;
  display: block;
  padding: 0.7rem 1rem;
}

.entry-meta .post-categories input,
.entry-meta .post-categories select,
.entry-meta .post-categories a,
.entry-meta .post-categories button {
  margin-bottom: 0;
}

.entry-meta .post-categories input {
  display: inline-block;
}

.entry-meta .post-categories li + li {
  margin-right: 1rem;
}

.entry-meta .post-categories a {
  padding: 0;
}

.entry-meta .post-categories > li > a {
  padding: 0.3125rem;
  background-color: #f4f5f7;
  color: #42526e;
}

.updated:not(.published) {
  display: none;
}

.page-content,
.entry-content,
.entry-summary {
  margin: 1.5rem 0 0;
}

@media print, screen and (min-width: 64em) {
  .page-content ul,
  .page-content ol,
  .entry-content ul,
  .entry-content ol,
  .entry-summary ul,
  .entry-summary ol {
    margin-right: 0;
  }
}

.page-content h2,
.page-content h3,
.entry-content h2,
.entry-content h3,
.entry-summary h2,
.entry-summary h3 {
  padding-top: 3.75rem;
}

.page-content h2:first-child,
.page-content h3:first-child,
.entry-content h2:first-child,
.entry-content h3:first-child,
.entry-summary h2:first-child,
.entry-summary h3:first-child {
  padding-top: 0;
}

.page-content h2,
.entry-content h2,
.entry-summary h2 {
  font-size: 1.75rem;
}

.page-content h3,
.entry-content h3,
.entry-summary h3 {
  font-size: 1.3125rem;
}

.page-content h4,
.entry-content h4,
.entry-summary h4 {
  padding-top: 1.875rem;
  font-size: 1.125rem;
  font-weight: 600;
  text-transform: uppercase;
}

.page-content h4:first-child,
.entry-content h4:first-child,
.entry-summary h4:first-child {
  padding-top: 0;
}

@media print, screen and (min-width: 40em) {
  .page-content,
  .entry-content,
  .entry-summary {
    font-size: 1.125rem;
    line-height: 1.8;
  }
}

.page-links {
  clear: both;
  margin: 0 0 1.5rem;
}

.edit-link {
  display: block;
  margin-top: 1rem;
}

.edit-link .post-edit-link {
  display: inline-block;
  vertical-align: middle;
  margin: 0 0 1rem 0;
  padding: 0.85em 1em;
  border: 1px solid transparent;
  border-radius: 0;
  transition: background-color 0.25s ease-out, color 0.25s ease-out;
  font-family: inherit;
  font-size: 0.9rem;
  -webkit-appearance: none;
  line-height: 1;
  text-align: center;
  cursor: pointer;
  font-size: 0.6rem;
}

[data-whatinput='mouse'] .edit-link .post-edit-link {
  outline: 0;
}

.edit-link .post-edit-link, .edit-link .post-edit-link.disabled, .edit-link .post-edit-link[disabled], .edit-link .post-edit-link.disabled:hover, .edit-link .post-edit-link[disabled]:hover, .edit-link .post-edit-link.disabled:focus, .edit-link .post-edit-link[disabled]:focus {
  background-color: #f4f5f7;
  color: #172b4d;
}

.edit-link .post-edit-link:hover, .edit-link .post-edit-link:focus {
  background-color: #c9ced8;
  color: #172b4d;
}

/*# sourceMappingURL=data:application/json;base64, */