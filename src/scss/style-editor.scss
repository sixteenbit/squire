/*!
Squire Editor Styles
 */

// 1. Configuration and helpers
@import 'abstracts/functions';
@import 'abstracts/mixins';

// 2. Vendors
@import 'vendors/foundation/foundation-components';

body {
  max-width: rem-calc(960);
  margin-right: auto;
  margin-left: auto;
  padding: $global-padding;
  background-color: $body-background;
  font-family: $body-font-family;
  color: $body-font-color;

  @include breakpoint(large up) {
    padding: rem-calc(80);
  }
}

.editor-styles-wrapper {
  max-width: 100% !important; /* Override where editor-style.css is affecting this. */
}

.wp-block {
  max-width: rem-calc(960);
}

/** === Base Typography === */

// Typography resets
div,
dl,
dt,
dd,
ul,
ol,
li,
h1,
h2,
h3,
h4,
h5,
h6,
pre,
form,
p,
blockquote,
th,
td {
  margin: 0;
  padding: 0;
}

// Paragraphs
p {
  margin-bottom: $paragraph-margin-bottom;

  font-size: inherit;
  line-height: $paragraph-lineheight;
  text-rendering: $paragraph-text-rendering;
}

// Emphasized text
em,
i {
  font-style: italic;
  line-height: inherit;
}

// Strong text
strong,
b {
  font-weight: $global-weight-bold;
  line-height: inherit;
}

// Small text
small {
  font-size: $small-font-size;
  line-height: inherit;
}

// Headings
h1,
h2,
h3,
h4,
h5,
h6 {
  font-family: $header-font-family;
  font-style: $header-font-style;
  font-weight: $header-font-weight;
  color: $header-color;
  text-rendering: $header-text-rendering;

  small {
    line-height: 0;
    color: $header-small-font-color;
  }
}

// Heading styles
@each $size, $headers in $header-styles {
  @include breakpoint($size) {
    @each $header, $header-defs in $headers {
      $font-size-temp: 1rem;
      #{$header}, .#{$header} {

        @if map-has-key($header-defs, font-size) {
          $font-size-temp: rem-calc(map-get($header-defs, font-size));
          font-size: $font-size-temp;
        } @else if map-has-key($header-defs, fs) {
          $font-size-temp: rem-calc(map-get($header-defs, fs));
          font-size: $font-size-temp;
        } @else if $size == $-zf-zero-breakpoint {
          font-size: $font-size-temp;
        }
        @if map-has-key($header-defs, line-height) {
          line-height: unitless-calc(map-get($header-defs, line-height), $font-size-temp);
        } @else if map-has-key($header-defs, lh) {
          line-height: unitless-calc(map-get($header-defs, lh), $font-size-temp);
        } @else if $size == $-zf-zero-breakpoint {
          line-height: unitless-calc($header-lineheight, $font-size-temp);
        }

        @if map-has-key($header-defs, margin-top) {
          margin-top: rem-calc(map-get($header-defs, margin-top));
        } @else if map-has-key($header-defs, mt) {
          margin-top: rem-calc(map-get($header-defs, mt));
        } @else if $size == $-zf-zero-breakpoint {
          margin-top: 0;
        }
        @if map-has-key($header-defs, margin-bottom) {
          margin-bottom: rem-calc(map-get($header-defs, margin-bottom));
        } @else if map-has-key($header-defs, mb) {
          margin-bottom: rem-calc(map-get($header-defs, mb));
        } @else if $size == $-zf-zero-breakpoint {
          margin-bottom: rem-calc($header-margin-bottom);
        }
      }
    }
  }
}

// Links
a {
  line-height: inherit;
  color: $anchor-color;
  text-decoration: $anchor-text-decoration;

  cursor: pointer;

  &:hover,
  &:focus {
    color: $anchor-color-hover;
    @if $anchor-text-decoration-hover != $anchor-text-decoration {
      text-decoration: $anchor-text-decoration-hover;
    }
  }

  img {
    border: 0;
  }
}

// Horizontal rule
hr {
  clear: both;

  max-width: $hr-width;
  height: 0;
  margin: $hr-margin;

  border-top: 0;
  border-right: 0;
  border-bottom: $hr-border;
  border-left: 0;
}

// Lists
ul,
ol,
dl {
  margin-bottom: $list-margin-bottom;
  list-style-position: $list-style-position;
  line-height: $list-lineheight;
}

// List items
li {
  font-size: inherit;
}

// Unordered lists
ul {
  margin-#{$global-left}: $list-side-margin;
  list-style-type: $list-style-type;
}

// Ordered lists
ol {
  margin-#{$global-left}: $list-side-margin;
}

// Nested unordered/ordered lists
ul, ol {
  & & {
    margin-#{$global-left}: $list-nested-side-margin;
    margin-bottom: 0;
  }
}

// Blockquotes
blockquote {
  margin: 0 0 $paragraph-margin-bottom;
  padding: $blockquote-padding;
  border-#{$global-left}: $blockquote-border;

  &, p {
    line-height: $paragraph-lineheight;
    color: $blockquote-color;
  }
}

// Abbreviations
abbr, abbr[title] {
  border-bottom: $abbr-underline;
  cursor: help;
  text-decoration: none;
}

// Figures
figure {
  margin: 0;
}

// Keystrokes
kbd {
  margin: 0;
  padding: $keystroke-padding;

  background-color: $keystroke-background;

  font-family: $keystroke-font;
  color: $keystroke-color;

  @if has-value($keystroke-radius) {
    border-radius: $keystroke-radius;
  }
}

/** === Post Title === */

.editor-post-title__block {
  .editor-post-title__input {
    font-family: $header-font-family;
    font-size: rem-calc(38);
    font-weight: 300;
    letter-spacing: rem-calc(-0.5);
  }
}
